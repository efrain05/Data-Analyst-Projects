{"cells":[{"cell_type":"markdown","id":"5a047d9b-f903-42d3-b646-81fbf1397652","metadata":{},"source":["# Using Joins to Analyze Book Sales in SQL\n","\n"]},{"cell_type":"code","execution_count":1,"id":"9228cab7-82f9-484d-8c26-504d41a08d91","metadata":{"chartConfig":{"bar":{"hasRoundedCorners":true,"stacked":false},"type":"bar","version":"v1","x":{"field":"customer_id","type":"integer"},"y":{"field":"cancelled_orders","type":"integer"}},"customType":"sql","dataFrameVariableName":"df","executionCancelledAt":null,"executionTime":707,"lastExecutedAt":1729350708483,"lastExecutedByKernel":"45e3fcc7-1456-46ef-9344-d7f929e20ad5","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"-- Select some customer data at random to make sure your integration is set up correctly\n-- When working with data of unknown size it's safer to add a limit to your query for performance.\nSELECT * FROM public.customer LIMIT 10;","outputsMetadata":{"0":{"height":362,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"},"visualizeDataframe":false},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"customer_id":[1,2,3,4,5,6,7,8,9,10],"email":["upurdy0@cdbaby.com","rvatini1@fema.gov","rturbitt2@geocities.jp","rkirsz3@jalbum.net","ckupis4@tamu.edu","kadamec5@weather.com","jgiraudeau6@elpais.com","nbonicelli7@examiner.com","pcurdell8@usa.gov","eguilder9@themeforest.net"],"first_name":["Ursola","Ruthanne","Reidar","Rich","Carline","Kandy","Jermain","Nolly","Phebe","Euell"],"index":[0,1,2,3,4,5,6,7,8,9],"last_name":["Purdy","Vatini","Turbitt","Kirsz","Kupis","Adamec","Giraudeau","Bonicelli","Curdell","Guilder"]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"customer_id","type":"integer"},{"name":"first_name","type":"string"},{"name":"last_name","type":"string"},{"name":"email","type":"string"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":10,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>email</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Ursola</td>\n","      <td>Purdy</td>\n","      <td>upurdy0@cdbaby.com</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Ruthanne</td>\n","      <td>Vatini</td>\n","      <td>rvatini1@fema.gov</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Reidar</td>\n","      <td>Turbitt</td>\n","      <td>rturbitt2@geocities.jp</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Rich</td>\n","      <td>Kirsz</td>\n","      <td>rkirsz3@jalbum.net</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Carline</td>\n","      <td>Kupis</td>\n","      <td>ckupis4@tamu.edu</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>Kandy</td>\n","      <td>Adamec</td>\n","      <td>kadamec5@weather.com</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>Jermain</td>\n","      <td>Giraudeau</td>\n","      <td>jgiraudeau6@elpais.com</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>Nolly</td>\n","      <td>Bonicelli</td>\n","      <td>nbonicelli7@examiner.com</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>Phebe</td>\n","      <td>Curdell</td>\n","      <td>pcurdell8@usa.gov</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>Euell</td>\n","      <td>Guilder</td>\n","      <td>eguilder9@themeforest.net</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   customer_id first_name  last_name                      email\n","0            1     Ursola      Purdy         upurdy0@cdbaby.com\n","1            2   Ruthanne     Vatini          rvatini1@fema.gov\n","2            3     Reidar    Turbitt     rturbitt2@geocities.jp\n","3            4       Rich      Kirsz         rkirsz3@jalbum.net\n","4            5    Carline      Kupis           ckupis4@tamu.edu\n","5            6      Kandy     Adamec       kadamec5@weather.com\n","6            7    Jermain  Giraudeau     jgiraudeau6@elpais.com\n","7            8      Nolly  Bonicelli   nbonicelli7@examiner.com\n","8            9      Phebe    Curdell          pcurdell8@usa.gov\n","9           10      Euell    Guilder  eguilder9@themeforest.net"]},"execution_count":1,"metadata":{},"output_type":"execute_result"}],"source":["\n","SELECT * FROM public.customer LIMIT 10;"]},{"cell_type":"code","execution_count":6,"id":"18728b2d-85de-4a28-876c-4eec1598a7e4","metadata":{"customType":"sql","dataFrameVariableName":"df1","executionCancelledAt":null,"executionTime":1191,"lastExecutedAt":1729374693947,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"-- Looking up the meaning of order_status ids from address_status table\n-- I found that 1 = active and 2 = inactive\n\n--SELECT* FROM address_status\n\n-- Lookig up the meaning of order_status ids\n--After looking up the meaning I found that id 6 = returned books \n \n SELECT * FROM order_status\n \n\n\n","outputsMetadata":{"0":{"height":250,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"}},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"index":[0,1,2,3,4,5],"status_id":[1,2,3,4,5,6],"status_value":["Order Received","Pending Delivery","Delivery In Progress","Delivered","Cancelled","Returned"]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"status_id","type":"integer"},{"name":"status_value","type":"string"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":6,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>status_id</th>\n","      <th>status_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Order Received</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Pending Delivery</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Delivery In Progress</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Delivered</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Cancelled</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>Returned</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   status_id          status_value\n","0          1        Order Received\n","1          2      Pending Delivery\n","2          3  Delivery In Progress\n","3          4             Delivered\n","4          5             Cancelled\n","5          6              Returned"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["-- Looking up the meaning of order_status ids from address_status table\n","-- I found that 1 = active and 2 = inactive\n","\n","--SELECT * FROM address_status\n","\n","-- Lookig up the meaning of order_status ids\n","--After looking up the meaning I found that id 1 = Order received, 2 = pending delivery, 3 = delivery in progress, 4 = delivered, 5 = cancelled, 6 = returned \n"," \n"," SELECT * FROM order_status\n"," \n"," \n","\n","\n"]},{"cell_type":"code","execution_count":3,"id":"fb427cc9-e133-470e-b099-c59b2920b183","metadata":{"customType":"sql","dataFrameVariableName":"df2","executionCancelledAt":null,"executionTime":857,"lastExecutedAt":1729373904714,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"-- Select an order_id from order_history with a status_id corresponding to `Returned`\n-- SELECT * FROM order_history WHERE status_id = 6 LIMIT 1\n\n-- Select all data in order_history with the order_id you found with the query above.\n\nSELECT * FROM order_history WHERE order_id = 4412 ","outputsMetadata":{"0":{"height":222,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"}},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"history_id":[4411,10842,14396,19564,22149],"index":[0,1,2,3,4],"order_id":[4412,4412,4412,4412,4412],"status_date":["2021-01-13T10:54:14.267","2021-01-14T07:27:36.267","2021-01-14T07:49:58.267","2021-01-16T04:00:18.267","2021-01-13T10:56:33.267"],"status_id":[1,2,3,4,6]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"history_id","type":"integer"},{"name":"order_id","type":"integer"},{"name":"status_id","type":"integer"},{"name":"status_date","type":"datetime","tz":"UTC"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":5,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>history_id</th>\n","      <th>order_id</th>\n","      <th>status_id</th>\n","      <th>status_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4411</td>\n","      <td>4412</td>\n","      <td>1</td>\n","      <td>2021-01-13 10:54:14.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10842</td>\n","      <td>4412</td>\n","      <td>2</td>\n","      <td>2021-01-14 07:27:36.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14396</td>\n","      <td>4412</td>\n","      <td>3</td>\n","      <td>2021-01-14 07:49:58.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19564</td>\n","      <td>4412</td>\n","      <td>4</td>\n","      <td>2021-01-16 04:00:18.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>22149</td>\n","      <td>4412</td>\n","      <td>6</td>\n","      <td>2021-01-13 10:56:33.267000+00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   history_id  order_id  status_id                      status_date\n","0        4411      4412          1 2021-01-13 10:54:14.267000+00:00\n","1       10842      4412          2 2021-01-14 07:27:36.267000+00:00\n","2       14396      4412          3 2021-01-14 07:49:58.267000+00:00\n","3       19564      4412          4 2021-01-16 04:00:18.267000+00:00\n","4       22149      4412          6 2021-01-13 10:56:33.267000+00:00"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["-- Select an order_id from order_history with a status_id corresponding to `Returned`\n","-- The first order id I found was 4412\n","\n","-- SELECT * FROM order_history WHERE status_id = 6 LIMIT 1\n","\n","-- Select all data in order_history with the order_id I found with the query above.\n","\n","SELECT * FROM order_history WHERE order_id = 4412 "]},{"cell_type":"code","execution_count":4,"id":"eb99d48c-4eab-4315-9ad5-a01ef0be5f13","metadata":{"customType":"sql","dataFrameVariableName":"df3","executionCancelledAt":null,"executionTime":874,"lastExecutedAt":1729374313734,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT COUNT(*) FROM order_history WHERE status_id = 6","outputsMetadata":{"0":{"height":110,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"}},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"count":[200],"index":[0]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"count","type":"integer"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":1,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   count\n","0    200"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["-- Counting the amount books returned\n","-- I found 200 books were returned \n","\n","SELECT COUNT(*) FROM order_history WHERE status_id = 6"]},{"cell_type":"code","execution_count":7,"id":"dba15ab9-997d-4edf-954c-89101a843869","metadata":{"customType":"sql","dataFrameVariableName":"df4","executionCancelledAt":null,"executionTime":955,"lastExecutedAt":1729376008856,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT * FROM cust_order\nJOIN order_history ON order_history.order_id = cust_order.order_id\nWHERE cust_order.order_id = 4412","outputsMetadata":{"0":{"height":222,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"}},"outputs":[{"data":{"application/com.datacamp.data-table.v1+json":{"table":{"data":[{"customer_id":96,"dest_address_id":701,"history_id":4411,"index":0,"order_date":"2021-01-13T01:37:21.267Z","order_id":4412,"shipping_method_id":1,"status_date":"2021-01-13T10:54:14.267Z","status_id":1},{"customer_id":96,"dest_address_id":701,"history_id":10842,"index":1,"order_date":"2021-01-13T01:37:21.267Z","order_id":4412,"shipping_method_id":1,"status_date":"2021-01-14T07:27:36.267Z","status_id":2},{"customer_id":96,"dest_address_id":701,"history_id":14396,"index":2,"order_date":"2021-01-13T01:37:21.267Z","order_id":4412,"shipping_method_id":1,"status_date":"2021-01-14T07:49:58.267Z","status_id":3},{"customer_id":96,"dest_address_id":701,"history_id":19564,"index":3,"order_date":"2021-01-13T01:37:21.267Z","order_id":4412,"shipping_method_id":1,"status_date":"2021-01-16T04:00:18.267Z","status_id":4},{"customer_id":96,"dest_address_id":701,"history_id":22149,"index":4,"order_date":"2021-01-13T01:37:21.267Z","order_id":4412,"shipping_method_id":1,"status_date":"2021-01-13T10:56:33.267Z","status_id":6}],"schema":{"fields":[{"name":"index","type":"integer"},{"name":"order_id","type":"integer"},{"name":"order_date","type":"datetime","tz":"UTC"},{"name":"customer_id","type":"integer"},{"name":"shipping_method_id","type":"integer"},{"name":"dest_address_id","type":"integer"},{"name":"history_id","type":"integer"},{"name":"order_id","type":"integer"},{"name":"status_id","type":"integer"},{"name":"status_date","type":"datetime","tz":"UTC"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":5,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>order_date</th>\n","      <th>customer_id</th>\n","      <th>shipping_method_id</th>\n","      <th>dest_address_id</th>\n","      <th>history_id</th>\n","      <th>order_id</th>\n","      <th>status_id</th>\n","      <th>status_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4412</td>\n","      <td>2021-01-13 01:37:21.267000+00:00</td>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>701</td>\n","      <td>4411</td>\n","      <td>4412</td>\n","      <td>1</td>\n","      <td>2021-01-13 10:54:14.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4412</td>\n","      <td>2021-01-13 01:37:21.267000+00:00</td>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>701</td>\n","      <td>10842</td>\n","      <td>4412</td>\n","      <td>2</td>\n","      <td>2021-01-14 07:27:36.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4412</td>\n","      <td>2021-01-13 01:37:21.267000+00:00</td>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>701</td>\n","      <td>14396</td>\n","      <td>4412</td>\n","      <td>3</td>\n","      <td>2021-01-14 07:49:58.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4412</td>\n","      <td>2021-01-13 01:37:21.267000+00:00</td>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>701</td>\n","      <td>19564</td>\n","      <td>4412</td>\n","      <td>4</td>\n","      <td>2021-01-16 04:00:18.267000+00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4412</td>\n","      <td>2021-01-13 01:37:21.267000+00:00</td>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>701</td>\n","      <td>22149</td>\n","      <td>4412</td>\n","      <td>6</td>\n","      <td>2021-01-13 10:56:33.267000+00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   order_id  ...                      status_date\n","0      4412  ... 2021-01-13 10:54:14.267000+00:00\n","1      4412  ... 2021-01-14 07:27:36.267000+00:00\n","2      4412  ... 2021-01-14 07:49:58.267000+00:00\n","3      4412  ... 2021-01-16 04:00:18.267000+00:00\n","4      4412  ... 2021-01-13 10:56:33.267000+00:00\n","\n","[5 rows x 9 columns]"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["-- Joining cust_order and order_history table \n","\n","SELECT * FROM cust_order\n","JOIN order_history ON order_history.order_id = cust_order.order_id\n","WHERE cust_order.order_id = 4412"]},{"cell_type":"code","execution_count":8,"id":"17e7d215-88e7-4de8-aacc-1ef347cfc201","metadata":{"chartConfig":{"bar":{"hasRoundedCorners":true,"stacked":false},"title":"Returned Orders Per Customer","type":"bar","version":"v1","x":{"field":"customer_id","type":"integer"},"y":{"field":"returned_orders","type":"integer"}},"customType":"sql","dataFrameVariableName":"df6","executionCancelledAt":null,"executionTime":985,"lastExecutedAt":1729376745114,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT cust_order.customer_id, COUNT(order_history.order_id) AS returned_orders \nFROM cust_order\nJOIN order_history ON order_history.order_id = cust_order.order_id\nWHERE order_history.status_id = 6\nGROUP BY cust_order.customer_id \nORDER BY returned_orders DESC","outputsMetadata":{"0":{"height":335,"type":"dataFrame"}},"sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"},"visualizeDataframe":true},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"customer_id":[60,107,83,42,94,53,57,3,80,2,38,546,16,18,97,103,344,248,43,52,87,14,1698,22,271,263,754,135,493,999,454,73,577,11,44,401,189,1462,161,88,816,119,659,461,1122,147,9,716,120,196,26,48,72,678,81,19,77,644,30,21,691,131,697,508,17,212,357,204,5,1550,997,255,388,1486,91,347,74,1267,807,29,54,138,34,297,96,67,972,407,10,1230,35,1127,1807,213,445,1934,1419,1278,168,1241,1401,1611,373,36,241,221,327,50,231,340,277,1553,111,1076,1323,1237,1813,600,99,355,1818,586,719,230,7,260,925,150,757,140,139,193,12,1360,24,869,1537,1451,141,186,852,935,33,1,76,106,969,110,178,55,1082,148,143,811,8,1364,1556,71,713,970,70,633,861,386,278,514,322,1797,84,1788,192,92,1598,679,337,114],"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"returned_orders":[3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"customer_id","type":"integer"},{"name":"returned_orders","type":"integer"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":176,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>returned_orders</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>60</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>107</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>83</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>42</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>94</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>92</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>1598</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>679</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>337</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>114</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>176 rows × 2 columns</p>\n","</div>"],"text/plain":["     customer_id  returned_orders\n","0             60                3\n","1            107                3\n","2             83                2\n","3             42                2\n","4             94                2\n","..           ...              ...\n","171           92                1\n","172         1598                1\n","173          679                1\n","174          337                1\n","175          114                1\n","\n","[176 rows x 2 columns]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["SELECT cust_order.customer_id, COUNT(order_history.order_id) AS returned_orders \n","FROM cust_order\n","JOIN order_history ON order_history.order_id = cust_order.order_id\n","WHERE order_history.status_id = 6\n","GROUP BY cust_order.customer_id \n","ORDER BY returned_orders DESC"]},{"cell_type":"code","execution_count":10,"id":"feadef9a-36bd-46ff-8656-1b113f7b6013","metadata":{"customType":"sql","dataFrameVariableName":"df7","executionCancelledAt":null,"executionTime":1067,"lastExecutedAt":1729377737183,"lastExecutedByKernel":"5d28389b-160e-4f57-91bd-0459973b8e94","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT customer.first_name,customer.last_name,customer.email,cust_order.customer_id, COUNT(order_history.order_id) AS returned_orders \nFROM cust_order\nJOIN order_history ON order_history.order_id = cust_order.order_id\nLEFT JOIN customer ON customer.customer_id = cust_order.customer_id\nWHERE order_history.status_id = 6\nGROUP BY cust_order.customer_id,customer.first_name,customer.last_name,customer.email\nHAVING COUNT(order_history.order_id) > 1\nORDER BY returned_orders DESC","outputsMetadata":{"0":{"height":543,"type":"dataFrame"}},"sqlCellMode":"dataFrame","sqlSource":{"integrationId":"bb2fab1b-691b-4ef5-9557-f944268e5ed4","integrationType":"postgresql","type":"integration"}},"outputs":[{"data":{"application/com.datacamp.data-table.v2+json":{"table":{"data":{"customer_id":[107,60,38,2,57,52,344,248,97,14,18,43,16,546,94,80,3,87,83,53,42,103],"email":["ealton2y@vimeo.com","kdeavenell1n@wikia.com",null,"rvatini1@fema.gov","dshimwell1k@ox.ac.uk","lthacker1f@hc360.com","mtulley9j@yahoo.co.jp","erevie6v@liveinternet.ru","nsanderson2o@webnode.com","gquogand@whitehouse.gov","ajeffersonh@live.com","lfigg16@blogspot.com","dhuyghef@dot.gov","dmatthiesenf5@i2i.jp","lortler2l@wikimedia.org","tsheraton27@elpais.com","rturbitt2@geocities.jp","tsaull2e@gnu.org","bgowlett2a@pagesperso-orange.fr","gkobisch1g@cdc.gov","atilburn15@simplemachines.org","cabrahim2u@washingtonpost.com"],"first_name":["Estelle","Kincaid",null,"Ruthanne","Doyle","Levy","Mariette","Edyth","Noellyn","Gusella","Andrei","La verne","Debbi","Danice","Leanor","Travus","Reidar","Tricia","Berti","Garold","Anna-diana","Cinda"],"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"last_name":["Alton","De Avenell",null,"Vatini","Shimwell","Thacker","Tulley","Revie","Sanderson","Quogan","Jefferson","Figg","Huyghe","Matthiesen","Ortler","Sheraton","Turbitt","Saull","Gowlett","Kobisch","Tilburn","Abrahim"],"returned_orders":[3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]},"schema":{"fields":[{"name":"index","type":"integer"},{"name":"first_name","type":"string"},{"name":"last_name","type":"string"},{"name":"email","type":"string"},{"name":"customer_id","type":"integer"},{"name":"returned_orders","type":"integer"}],"pandas_version":"1.4.0","primaryKey":["index"]}},"total_rows":22,"truncation_type":null},"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>email</th>\n","      <th>customer_id</th>\n","      <th>returned_orders</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Estelle</td>\n","      <td>Alton</td>\n","      <td>ealton2y@vimeo.com</td>\n","      <td>107</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Kincaid</td>\n","      <td>De Avenell</td>\n","      <td>kdeavenell1n@wikia.com</td>\n","      <td>60</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>38</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Ruthanne</td>\n","      <td>Vatini</td>\n","      <td>rvatini1@fema.gov</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Doyle</td>\n","      <td>Shimwell</td>\n","      <td>dshimwell1k@ox.ac.uk</td>\n","      <td>57</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Levy</td>\n","      <td>Thacker</td>\n","      <td>lthacker1f@hc360.com</td>\n","      <td>52</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Mariette</td>\n","      <td>Tulley</td>\n","      <td>mtulley9j@yahoo.co.jp</td>\n","      <td>344</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Edyth</td>\n","      <td>Revie</td>\n","      <td>erevie6v@liveinternet.ru</td>\n","      <td>248</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Noellyn</td>\n","      <td>Sanderson</td>\n","      <td>nsanderson2o@webnode.com</td>\n","      <td>97</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Gusella</td>\n","      <td>Quogan</td>\n","      <td>gquogand@whitehouse.gov</td>\n","      <td>14</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Andrei</td>\n","      <td>Jefferson</td>\n","      <td>ajeffersonh@live.com</td>\n","      <td>18</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>La verne</td>\n","      <td>Figg</td>\n","      <td>lfigg16@blogspot.com</td>\n","      <td>43</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Debbi</td>\n","      <td>Huyghe</td>\n","      <td>dhuyghef@dot.gov</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Danice</td>\n","      <td>Matthiesen</td>\n","      <td>dmatthiesenf5@i2i.jp</td>\n","      <td>546</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Leanor</td>\n","      <td>Ortler</td>\n","      <td>lortler2l@wikimedia.org</td>\n","      <td>94</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Travus</td>\n","      <td>Sheraton</td>\n","      <td>tsheraton27@elpais.com</td>\n","      <td>80</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Reidar</td>\n","      <td>Turbitt</td>\n","      <td>rturbitt2@geocities.jp</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tricia</td>\n","      <td>Saull</td>\n","      <td>tsaull2e@gnu.org</td>\n","      <td>87</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Berti</td>\n","      <td>Gowlett</td>\n","      <td>bgowlett2a@pagesperso-orange.fr</td>\n","      <td>83</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Garold</td>\n","      <td>Kobisch</td>\n","      <td>gkobisch1g@cdc.gov</td>\n","      <td>53</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Anna-diana</td>\n","      <td>Tilburn</td>\n","      <td>atilburn15@simplemachines.org</td>\n","      <td>42</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Cinda</td>\n","      <td>Abrahim</td>\n","      <td>cabrahim2u@washingtonpost.com</td>\n","      <td>103</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    first_name   last_name  ... customer_id  returned_orders\n","0      Estelle       Alton  ...         107                3\n","1      Kincaid  De Avenell  ...          60                3\n","2         None        None  ...          38                2\n","3     Ruthanne      Vatini  ...           2                2\n","4        Doyle    Shimwell  ...          57                2\n","5         Levy     Thacker  ...          52                2\n","6     Mariette      Tulley  ...         344                2\n","7        Edyth       Revie  ...         248                2\n","8      Noellyn   Sanderson  ...          97                2\n","9      Gusella      Quogan  ...          14                2\n","10      Andrei   Jefferson  ...          18                2\n","11    La verne        Figg  ...          43                2\n","12       Debbi      Huyghe  ...          16                2\n","13      Danice  Matthiesen  ...         546                2\n","14      Leanor      Ortler  ...          94                2\n","15      Travus    Sheraton  ...          80                2\n","16      Reidar     Turbitt  ...           3                2\n","17      Tricia       Saull  ...          87                2\n","18       Berti     Gowlett  ...          83                2\n","19      Garold     Kobisch  ...          53                2\n","20  Anna-diana     Tilburn  ...          42                2\n","21       Cinda     Abrahim  ...         103                2\n","\n","[22 rows x 5 columns]"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["SELECT customer.first_name,customer.last_name,customer.email,cust_order.customer_id, COUNT(order_history.order_id) AS returned_orders \n","FROM cust_order\n","JOIN order_history ON order_history.order_id = cust_order.order_id\n","LEFT JOIN customer ON customer.customer_id = cust_order.customer_id\n","WHERE order_history.status_id = 6\n","GROUP BY cust_order.customer_id,customer.first_name,customer.last_name,customer.email\n","HAVING COUNT(order_history.order_id) > 1\n","ORDER BY returned_orders DESC"]}],"metadata":{"colab":{"name":"Welcome to DataCamp Workspaces.ipynb","provenance":[]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"nbformat":4,"nbformat_minor":5}
